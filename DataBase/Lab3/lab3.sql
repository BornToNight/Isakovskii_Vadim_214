-- 14
SELECT * FROM T_CATERER;
SELECT * FROM T_STORE;
-- 15
SELECT ID_MATERIAL, NAME, ID_GROUP FROM T_MATERIAL;
-- 16
SELECT NAME, SURNAME, FATHER_NAME, BORN FROM T_EMPLOYER;
-- 17
SELECT * FROM T_EMPLOYER
  WHERE SEX LIKE 'М';
 -- 18
 SELECT * FROM T_CATERER
  WHERE ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY
       WHERE SUPPLY_DATE >= '01.04.2009'
       AND SUPPLY_DATE <= '30.06.2009');
-- 19
SELECT * FROM T_SECTION
  WHERE ID_SECTION NOT IN
    (SELECT ID_SECTION FROM T_DELIVER
       WHERE DELIVER_DATE LIKE '%07.2009');
-- 20
SELECT NAME FROM T_SECTION
  WHERE ID_SECTION IN 
    (SELECT ID_SECTION FROM T_DELIVER 
    	WHERE DELIVER_DATE = SYSDATE);
-- 21
SELECT NAME FROM T_MATERIAL 
  WHERE ID_MATERIAL IN
    (SELECT ID_MATERIAL FROM T_SUPPLY 
       WHERE SUPPLY_DATE LIKE '%2017');
-- 22
SELECT NAME FROM T_MATERIAL 
  WHERE ID_MATERIAL NOT IN
    (SELECT ID_MATERIAL FROM T_SUPPLY 
       WHERE SUPPLY_DATE LIKE '%2017')
  AND ID_MATERIAL IN 
    (SELECT ID_MATERIAL FROM T_SURPLUS 
       WHERE VOLUME LIKE 0);
-- 23
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.NAME, T_EMPLOYER.FATHER_NAME, T_EMPLOYER.SURNAME
  FROM T_SECTION, T_EMPLOYER
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER;
-- 24
SELECT T_SECTION.ID_SECTION, T_SECTION.NAME, T_EMPLOYER.NAME, T_EMPLOYER.SURNAME, T_EMPLOYER.FATHER_NAME, T_JOB.NAME
  FROM T_SECTION, T_EMPLOYER, T_JOB
  WHERE T_SECTION.ID_EMPLOYER = T_EMPLOYER.ID_EMPLOYER
  AND T_EMPLOYER.ID_JOB = T_JOB.ID_JOB;
-- 25 
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE
  WHERE T_CATERER.ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER;
-- 26
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER, T_MATERIAL, T_SUPPLY, T_INPRICE
  WHERE T_CATERER.ID_CATERER IN
    (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  AND T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  AND T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  AND T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  AND T_CATERER.LEGAL_ADDRES LIKE 'Пермь%';
-- 27
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME,T_STORE.NAME, T_SURPLUS.VOLUME
  FROM T_MATERIAL, T_STORE, T_SURPLUS
  WHERE T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  AND T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL;
-- 28
SELECT T_CATERER.NAME, T_MATERIAL.NAME, T_SUPPLY.VOLUME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER JOIN T_MATERIAL
    ON T_CATERER.ID_CATERER IN 
      (SELECT ID_CATERER FROM T_SUPPLY 
       WHERE SUPPLY_DATE BETWEEN '01.01.2009' AND '31.03.2009')
  JOIN T_SUPPLY 
    ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
    AND T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  JOIN T_INPRICE
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;
-- 29
SELECT T_CATERER.NAME, T_SUPPLY.VOLUME, T_MATERIAL.NAME, T_INPRICE.PRICE, T_SUPPLY.SUPPLY_DATE
  FROM T_CATERER LEFT JOIN T_SUPPLY 
    ON T_SUPPLY.ID_CATERER = T_CATERER.ID_CATERER
  LEFT JOIN T_MATERIAL
    ON T_SUPPLY.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
  LEFT JOIN T_INPRICE
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL;
-- 30
SELECT T_STORE.ID_STORE, T_STORE.NAME, T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS
    ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL 
    ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL;
-- 31
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME, T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL JOIN T_MESSURE 
    ON T_MATERIAL.ID_MESSURE = T_MESSURE.ID_MESSURE
  JOIN T_INPRICE 
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
    AND T_INPRICE.PRICE_DATE IN
      (SELECT PRICE_DATE FROM T_INPRICE 
         WHERE PRICE_DATE BETWEEN '01.07.2009' AND '31.09.2009');
-- 32
SELECT T_MATERIAL.ID_MATERIAL, T_MATERIAL.NAME, T_MESSURE.NAME, T_INPRICE.PRICE
  FROM T_MATERIAL LEFT JOIN T_MESSURE 
    ON T_MATERIAL.ID_MESSURE = T_MESSURE.ID_MESSURE
  LEFT JOIN T_INPRICE 
    ON T_INPRICE.ID_MATERIAL = T_MATERIAL.ID_MATERIAL
-- 33
ALTER TABLE T_EMPLOYER
  ADD ID_MANAGER INT;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 1
    WHERE ID_EMPLOYER BETWEEN 2 AND 4;
UPDATE T_EMPLOYER
  SET ID_MANAGER = 3
    WHERE ID_EMPLOYER LIKE 5;
-- 34
ALTER TABLE T_GROUP
  ADD MIN_GROUP INT;
UPDATE T_GROUP
  SET MIN_GROUP = 1
    WHERE ID_GROUP BETWEEN 1 AND 3;
UPDATE T_GROUP
  SET MIN_GROUP = 2
    WHERE ID_GROUP > 3;
SELECT * FROM T_GROUP 
  WHERE MIN_GROUP = 1;
SELECT * FROM T_GROUP 
  WHERE MIN_GROUP = 2;
-- 35
CREATE TABLE T_EXEMP(
  ID_EMPLOYER INT NOT NULL,
  NAME NVARCHAR2(20) NOT NULL,
  SURNAME NVARCHAR2(20) NOT NULL,
  FATHER_NAME NVARCHAR2(20),
  BORN DATE,
  ID_JOB INT,
  ID_MANAGER INT,
  CONSTRAINT PK_EXEMP
    PRIMARY KEY (ID_EMPLOYER));
INSERT INTO T_EXEMP (ID_EMPLOYER, NAME, SURNAME, FATHER_NAME, 
    BORN, ID_JOB, ID_MANAGER)
  VALUES (5, 'Keanu', 'Reaves', 'ОТЧЕСТВО', '12.01.1979', 3, 1);
-- 36
ALTER TABLE T_EXEMP
  ADD DISMISSED DATE;
UPDATE T_EXEMP
  SET DISMISSED = '01.01.2016';
-- 37
CREATE TABLE T_CONTACT(
  ID_CONTACT INT NOT NULL,
  ID_CATERER INT,
  NAME NVARCHAR2(20) NOT NULL,
  SURNAME NVARCHAR2(20) NOT NULL,
  FATHER_NAME NVARCHAR2(30),
  TELEPHON NVARCHAR2(12) NOT NULL,
  CONSTRAINT PK_CONTACT
    PRIMARY KEY (ID_CONTACT),
  CONSTRAINT FK_CONTACT_CATERER
    FOREIGN KEY (ID_CATERER) REFERENCES T_CATERER(ID_CATERER) 
      ON DELETE CASCADE);

INSERT INTO T_CONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (1, 1, 'Name1', 'Surname1', 'FATHER_name1', '80000000001');
INSERT INTO TCONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (2, 2, 'Name2', 'Surname2', 'FATHER_name2', '80000000002');
INSERT INTO TCONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (3, 3, 'Name3', 'Surname3', 'FATHER_name3', '80000000003');
INSERT INTO TCONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (4, 3, 'Name4', 'Surname4', 'FATHER_name4', '80000000004');
INSERT INTO TCONTACT (ID_CONTACT, ID_CATERER, NAME, SURNAME, FATHER_NAME, TELEPHON)
  VALUES (5, 5, 'Name5', 'Surname5', 'FATHER_name5', '80000000005');
SELECT NAME, SURNAME, FATHER_NAME, TELEPHON FROM T_CONTACT;
-- 38
SELECT * FROM T_CATERER
  ORDER BY NAME;
-- 39
SELECT * FROM T_CATERER JOIN T_CONTACT
    ON T_CATERER.ID_CATERER = T_CONTACT.ID_CATERER
  ORDER BY T_CATERER.NAME, T_CONTACT.SURNAME, T_CONTACT.NAME, FATHER_NAME;
-- 40
SELECT T_STORE.NAME, T_MATERIAL.NAME, T_SURPLUS.VOLUME
  FROM T_STORE LEFT JOIN T_SURPLUS 
    ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  LEFT JOIN T_MATERIAL 
    ON T_MATERIAL.ID_MATERIAL = T_SURPLUS.ID_MATERIAL
  ORDER BY T_STORE.ID_STORE, T_SURPLUS.VOLUME DESC; 
-- 41
SELECT T_MATERIAL.NAME AS "Material", T_CATERER.NAME AS "Caterer", SUM(T_SUPPLY.VOLUME) AS "Volume"
  FROM T_CATERER JOIN T_SUPPLY 
    ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  JOIN T_MATERIAL
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
     AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME, T_CATERER.NAME
  ORDER BY T_CATERER.NAME, T_MATERIAL.NAME;
-- 42
SELECT T_MATERIAL.NAME AS "Material", AVG(T_SUPPLY.VOLUME * T_INPRICE.PRICE) AS "Average"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY 
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  LEFT JOIN T_INPRICE 
    ON T_MATERIAL.ID_MATERIAL = T_INPRICE.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;
-- 43
SELECT T_MATERIAL.NAME AS "Material", SUM(T_SUPPLY.VOLUME) AS "Sum"
  FROM T_MATERIAL LEFT JOIN T_SUPPLY 
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  WHERE T_SUPPLY.SUPPLY_DATE >= '01.01.2017'
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY T_MATERIAL.NAME
  ORDER BY T_MATERIAL.NAME;
-- 44
SELECT T_MATERIAL.NAME AS "Material", AVG(T_SUPPLY.VOLUME * T_INPRICE.PRICE), SUM(AVG(T_SUPPLY.VOLUME * T_INPRICE.PRICE)*T_INPRICE.PRICE)
    ON T_MATERIAL.ID_MATERIAL = T_SUPPLY.ID_MATERIAL
  LEFT JOIN TINPRICE 
    ON T_SURPLUS.ID_STORE = T_STORE.ID_STORE
  GROUP BY T_MATERIAL.NAME ORDER BY T_MATERIAL.NAME;
-- 45
SELECT NAME FROM T_STORE INNER JOIN T_SURPLUS
  ON T_STORE.ID_STORE = T_SURPLUS.ID_STORE
  GROUP BY NAME HAVING SUM(VOLUME) = 0;
-- 46
SELECT NAME FROM T_CATERER INNER JOIN T_SUPPLY
  ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  WHERE SUPPLY_DATE >= '01.01.2017' 
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) < 1000;
-- 47
SELECT NAME FROM T_CATERER JOIN T_SUPPLY
  ON T_CATERER.ID_CATERER = T_SUPPLY.ID_CATERER
  WHERE SUPPLY_DATE >= '01.01.2017' 
    AND T_SUPPLY.SUPPLY_DATE <= '31.12.2017'
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);
  GROUP BY NAME HAVING SUM(VOLUME) = MAX(VOLUME);